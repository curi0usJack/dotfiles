
# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 1000
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on
setw -g clock-mode-style 24


# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbindings

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
unbind C-a
unbind C-j
unbind C-n

# Unbind default key bindings, we're going to override
# unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
#unbind }    # swap-pane -D
#unbind {    # swap-pane -U
unbind [    # paste-buffer
unbind ]
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind v
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left
unbind H
unbind J
unbind L
unbind K
unbind h
unbind j
unbind k
unbind s
unbind d
unbind l
unbind f

#
# Set Prefix to Ctrl-a
#
set -g prefix C-a
bind-key -n C-a send-prefix

# SESSION SETTINGS
#
# Detach from session
bind s detach

#
# WINDOW SETTINGS
#
bind c new-window -c "#{pane_current_path}"
bind -r C-h previous-window
bind -r C-l next-window
bind X kill-window

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

#
# PANE SETTINGS
#
# Kill
bind x kill-pane

# moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind b setw synchronize-panes

# Disconnect from screen
bind -T root F5 send-keys C-a d C-m

# vim-tmux-navigator
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
#
# Toggle panes
bind-key C-n swap-pane -s :+.top \; rotate-window -Ut :+
bind-key C-p swap-pane -s :+.bottom \; rotate-window -Dt :+


# Resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Split panes
bind - split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Zoom pane
bind + resize-pane -Z

# Link window
#bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
#bind \ if '[ #{pane_index} -eq 1 ]' \
#     'swap-pane -s "!"' \
#     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

bind -r space next-layout
# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on
#bind -t vi-copy y copy-pipe "pbcopy"
# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer
bind -T root F8 source-file /home/jason/.tmux.conf
bind -T root F9 run-shell /home/jason/.config/polybar/launch.sh
bind C-p choose-buffer

# trigger copy mode by
bind -n M-Up copy-mode
bind C-[ copy-mode
bind C-] paste-buffer

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

bind C-i run-shell -b "/home/jason/.tmux/plugins/tmux-fzf/scripts/session.sh attach"
bind C-p run-shell -b "/home/jason/.tmux/plugins/tmux-fzf/scripts/process.sh list"
bind C-f run-shell -b "\"/home/jason/.tmux/plugins/extrakto/scripts/open.sh\" \"#{pane_id}\""
#yank="~/.tmux/yank.sh"

# =====================================
# ===    Unicode Symbols ===
# ======================================
nerdfont_seg_left_curve_filled="\ue0b6"
nerdfont_seg_right_curve_filled="\ue0b4"
nerdfont_skull="\ue231"
nerdfont_warning="\uf071"

# =====================================
# ===    Appearence & Colors        ===
# =====================================
# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience

#TS
ts_green="#12572A"
ts_white="#FFFFFF"
todragon_red="red"
nord_blue="#323F4E"
kitty_white="#F8F8F2"

#Chop21 - https://color.adobe.com/Chop21-color-theme-16523047
chop_salmon="#C98380"
chop_orange="#D4A579"
chop_yellow="#D9CEA9"
chop_green="#A0B19F"
chop_blue="#435764"
#
# One dark
#
color_black="#282c34"
color_blue="#61afef"
color_yellow="#e5c07b"
color_red="#e06c75"
color_white="#aab2bf"
color_green="#98c379"
color_visual_grey="#3e4452"
color_comment_grey="#5c6370"
color_purple="#c678dd"
# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="$kitty_white"
# color_status_text="colour245"
# color_main="$color_blue_accent"
# color_main="$color_purple"
color_main="$todragon_red"
color_blue_accent="colour45"
# color_secondary="$color_purple"
color_secondary="$color_red"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# =====================================
# ===    Plugins                    ===
# =====================================
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'xamut/tmux-weather'
set-option -g @tmux-weather-location "{Wisconsin:Madison}"
set-option -g @tmux-weather-interval 15
set-option -g @tmux-weather-units "u"
set-option -g @tmux-weather-format "%c+%t+%w"

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_bg 'None'
set -g @prefix_highlight_prefix_prompt "#[fg=blue]$nerdfont_seg_left_curve_filled#[default]#[fg=$kitty_white]#[bg=blue]"$nerdfont_warning" ^A#[default]#[fg=blue]$nerdfont_seg_right_curve_filled "
set -g @extrakto_key 'f'
set -g @yank_selection_mouse 'clipboard'
set -g @continuum-restore 'on'
set -g @open-S 'https://www.google.com/search?q='

# =====================================
# ===    Widget Settings            ===
# =====================================
wg_line_spacer="#[default]#[fg=$ts_white]|#[default]"
wg_date="#[fg=blue]%A, %d %b %Y %I:%M %p "
wg_sysstat="#{sysstat_cpu} #{sysstat_mem}"
wg_git_or_sysstat="#(cd #{pane_current_path} && [ -d .git ] && gitmux #{pane_current_path} || echo $(pwd | rev | cut -d/ -f 1-2 | rev))"
wg_lan_ip="#(ip route get 1 | awk '{print $7;exit}')"
wg_prompt_ip="#(ip addr show | grep -w inet | grep -v 'host lo' | sed -e 's|^[ \t]*||' | cut -d' ' -f2 | cut -d'/' -f1 | tr '\n' ',' | sed 's|,$||g' | cut -d"," -f1)"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]#[fg=$ts_white]@#H"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
wg_weather="#{weather}"

# =====================================
# ===    Panes                      ===
# =====================================
setw -g pane-active-border-style "fg=$color_main"
set -g pane-border-style "fg=colour239"

# =====================================
# ===    Status Line                ===
# =====================================
# window segments in status line. Not currently used, but nice to have in case.
# separator_powerline_left=""
# separator_powerline_right=""

# Main Status Line
set -g status-interval 1
set -g status-position top
set -g status-style "fg=$color_status_text,bg=$color_dark"

# Status Left
set -g status-left-length 20
# status_left='#[fg=blue](#S) #{prefix_highlight}#[default]'
status_left='#[fg=blue](#S) #[default]'
set -g status-left $status_left

# Status Right
set -g status-right-length 200
# status_right="$wg_is_keys_off #{prefix_highlight}$wg_lan_ip $wg_line_spacer $wg_weather $wg_line_spacer $wg_git_or_sysstat $wg_line_spacer $wg_user_host $wg_line_spacer $wg_date"
status_right="$wg_is_keys_off #{prefix_highlight}$wg_git_or_sysstat $wg_line_spacer $wg_user_host $wg_line_spacer $wg_date"
set -g status-right $status_right

# Current window status line selector
# setw -g window-status-activity-style "fg=$color_secondary"
# setw -g window-status-current-style "fg=$color_light,bold,bg=$color_green"
# setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"
set -g window-status-separator ""
setw -g window-status-format " #I:#W "
setw -g window-status-current-format "#[fg=$color_secondary]$nerdfont_seg_left_curve_filled#[default]#[fg=$kitty_white]#[bg=$color_secondary]#I:#W#[default]#[fg=$color_secondary]$nerdfont_seg_right_curve_filled"

# =====================================
# ===    Launch Options             ===
# =====================================
# Note -p below is required to use the popup feature. Everything after that is FZF_DEFAULT_OPTS env var, which isn't being read by the plugin for some reason. Had to hard code it.
TMUX_FZF_LAUNCH_KEY="C-F"
TMUX_FZF_OPTIONS="-p --no-mouse -1 --reverse --height 40% --multi --inline-info --preview='[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300' --preview-window='right:hidden:wrap' --bind='f3:execute(bat --style=numbers {} || less -f {}),f2:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | pbcopy),ctrl-x:execute(rm -i {+})+abort' --color=dark  --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7"

# =====================================
# ===    F Key Bindings             ===
# =====================================
bind -T root F7  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F7 \
  set -u prefix \;\
 set -u key-table \;\
 set -u status-style \;\
 set -u window-status-current-style \;\
 set -u window-status-current-format \;\
 refresh-client -S

# =====================================
# ===    Runners                    ===
# =====================================
run -b '~/.tmux/plugins/tpm/tpm'
#run "~/.tmux/plugins/tpm/bin/update_plugins all"
# run -b '~/.tmux/plugins/tmux-cpu/cpu.tmux'
#run-shell ~/.tmux/plugins/tmux-yank/yank.tmux
